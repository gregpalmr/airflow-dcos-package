#!/usr/bin/env sh

##############################################################################
##
##  airflow start up script for UN*X
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/.." >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

APP_NAME="airflow"
APP_BASE_NAME=`basename "$0"`

# Add default JVM options here. You can also use JAVA_OPTS and AIRFLOW_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn ( ) {
    echo "$*"
}

die ( ) {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

CLASSPATH=$APP_HOME/lib/airflow.jar:$APP_HOME/lib/mesos-1.4.0-rc1.jar:$APP_HOME/lib/scheduler-0.31.0-SNAPSHOT.jar:$APP_HOME/lib/executor-0.31.0-SNAPSHOT.jar:$APP_HOME/lib/common-0.31.0-SNAPSHOT.jar:$APP_HOME/lib/jackson-datatype-guava-2.6.3.jar:$APP_HOME/lib/jackson-datatype-jdk8-2.6.3.jar:$APP_HOME/lib/jackson-datatype-jsr310-2.6.3.jar:$APP_HOME/lib/jackson-dataformat-yaml-2.6.3.jar:$APP_HOME/lib/jackson-datatype-protobuf-0.9.3.jar:$APP_HOME/lib/annotations-3.0.1u2.jar:$APP_HOME/lib/commons-collections-3.2.2.jar:$APP_HOME/lib/commons-io-2.4.jar:$APP_HOME/lib/antlr4-runtime-4.5.1-1.jar:$APP_HOME/lib/javax.ws.rs-api-2.0.1.jar:$APP_HOME/lib/curator-framework-2.9.1.jar:$APP_HOME/lib/curator-recipes-2.9.1.jar:$APP_HOME/lib/curator-test-2.9.1.jar:$APP_HOME/lib/httpclient-4.5.2.jar:$APP_HOME/lib/fluent-hc-4.5.2.jar:$APP_HOME/lib/commons-lang3-3.4.jar:$APP_HOME/lib/protobuf-java-format-1.4.jar:$APP_HOME/lib/json-20160212.jar:$APP_HOME/lib/diffutils-1.3.0.jar:$APP_HOME/lib/jersey-container-jetty-http-2.23.jar:$APP_HOME/lib/jersey-container-servlet-core-2.23.jar:$APP_HOME/lib/jersey-media-json-jackson-2.23.jar:$APP_HOME/lib/jersey-media-multipart-2.23.jar:$APP_HOME/lib/mimepull-1.9.6.jar:$APP_HOME/lib/jetty-servlet-9.2.3.v20140905.jar:$APP_HOME/lib/hibernate-validator-5.3.2.Final.jar:$APP_HOME/lib/javax.el-api-2.2.4.jar:$APP_HOME/lib/javax.el-2.2.4.jar:$APP_HOME/lib/mesos-http-adapter-0.4.1.jar:$APP_HOME/lib/java-jwt-3.2.0.jar:$APP_HOME/lib/bcprov-jdk15on-1.57.jar:$APP_HOME/lib/bcpkix-jdk15on-1.57.jar:$APP_HOME/lib/metrics-core-3.2.5.jar:$APP_HOME/lib/metrics-servlet-3.2.5.jar:$APP_HOME/lib/metrics-servlets-3.2.5.jar:$APP_HOME/lib/simpleclient_dropwizard-0.0.26.jar:$APP_HOME/lib/simpleclient_servlet-0.0.26.jar:$APP_HOME/lib/metrics3-statsd-4.2.0.jar:$APP_HOME/lib/slf4j-api-1.7.25.jar:$APP_HOME/lib/log4j-core-2.8.1.jar:$APP_HOME/lib/log4j-slf4j-impl-2.8.1.jar:$APP_HOME/lib/compiler-0.9.2.jar:$APP_HOME/lib/commons-codec-1.10.jar:$APP_HOME/lib/snakeyaml-1.15.jar:$APP_HOME/lib/jackson-annotations-2.6.0.jar:$APP_HOME/lib/curator-client-2.9.1.jar:$APP_HOME/lib/zookeeper-3.4.6.jar:$APP_HOME/lib/javassist-3.18.1-GA.jar:$APP_HOME/lib/commons-math-2.2.jar:$APP_HOME/lib/httpcore-4.4.4.jar:$APP_HOME/lib/commons-logging-1.2.jar:$APP_HOME/lib/javax.inject-2.4.0-b34.jar:$APP_HOME/lib/jetty-continuation-9.1.1.v20140108.jar:$APP_HOME/lib/jersey-common-2.23.jar:$APP_HOME/lib/jersey-server-2.23.jar:$APP_HOME/lib/jersey-entity-filtering-2.23.jar:$APP_HOME/lib/jackson-jaxrs-base-2.5.4.jar:$APP_HOME/lib/jackson-jaxrs-json-provider-2.5.4.jar:$APP_HOME/lib/jetty-security-9.2.3.v20140905.jar:$APP_HOME/lib/validation-api-1.1.0.Final.jar:$APP_HOME/lib/jboss-logging-3.3.0.Final.jar:$APP_HOME/lib/classmate-1.3.1.jar:$APP_HOME/lib/edu-umd-cs-findbugs-annotations-1.3.2-201002241900.nbm:$APP_HOME/lib/log4j-over-slf4j-1.7.10.jar:$APP_HOME/lib/jcl-over-slf4j-1.7.10.jar:$APP_HOME/lib/google-http-client-1.20.0.jar:$APP_HOME/lib/metrics-healthchecks-3.2.5.jar:$APP_HOME/lib/metrics-json-3.2.5.jar:$APP_HOME/lib/metrics-jvm-3.2.5.jar:$APP_HOME/lib/profiler-1.0.2.jar:$APP_HOME/lib/simpleclient-0.0.26.jar:$APP_HOME/lib/simpleclient_common-0.0.26.jar:$APP_HOME/lib/metrics-statsd-common-4.2.0.jar:$APP_HOME/lib/log4j-api-2.8.1.jar:$APP_HOME/lib/log4j-1.2.16.jar:$APP_HOME/lib/jline-0.9.94.jar:$APP_HOME/lib/netty-3.7.0.Final.jar:$APP_HOME/lib/javax.servlet-api-3.1.0.jar:$APP_HOME/lib/javax.annotation-api-1.2.jar:$APP_HOME/lib/jersey-guava-2.23.jar:$APP_HOME/lib/hk2-api-2.4.0-b34.jar:$APP_HOME/lib/hk2-locator-2.4.0-b34.jar:$APP_HOME/lib/osgi-resource-locator-1.0.1.jar:$APP_HOME/lib/jersey-client-2.23.jar:$APP_HOME/lib/jersey-media-jaxb-2.23.jar:$APP_HOME/lib/jackson-module-jaxb-annotations-2.5.4.jar:$APP_HOME/lib/annotations-1.3.2.jar:$APP_HOME/lib/joda-time-2.9.1.jar:$APP_HOME/lib/hk2-utils-2.4.0-b34.jar:$APP_HOME/lib/aopalliance-repackaged-2.4.0-b34.jar:$APP_HOME/lib/javax.inject-1.jar:$APP_HOME/lib/protobuf-java-3.3.1.jar:$APP_HOME/lib/jackson-databind-2.6.6.jar:$APP_HOME/lib/guava-18.0.jar:$APP_HOME/lib/jcip-annotations-1.0.jar:$APP_HOME/lib/jetty-server-9.2.3.v20140905.jar:$APP_HOME/lib/jackson-core-2.6.6.jar:$APP_HOME/lib/jsr305-3.0.1.jar:$APP_HOME/lib/jetty-http-9.2.3.v20140905.jar:$APP_HOME/lib/jetty-io-9.2.3.v20140905.jar:$APP_HOME/lib/jetty-util-9.2.3.v20140905.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
    MAX_FD_LIMIT=`ulimit -H -n`
    if [ $? -eq 0 ] ; then
        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
            MAX_FD="$MAX_FD_LIMIT"
        fi
        ulimit -n $MAX_FD
        if [ $? -ne 0 ] ; then
            warn "Could not set maximum file descriptor limit: $MAX_FD"
        fi
    else
        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
    fi
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
    JAVACMD=`cygpath --unix "$JAVACMD"`

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
    SEP=""
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS="$ROOTDIRS$SEP$dir"
        SEP="|"
    done
    OURCYGPATTERN="(^($ROOTDIRS))"
    # Add a user-defined pattern to the cygpath arguments
    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
    fi
    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    i=0
    for arg in "$@" ; do
        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
        else
            eval `echo args$i`="\"$arg\""
        fi
        i=$((i+1))
    done
    case $i in
        (0) set -- ;;
        (1) set -- "$args0" ;;
        (2) set -- "$args0" "$args1" ;;
        (3) set -- "$args0" "$args1" "$args2" ;;
        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
    esac
fi

# Escape application args
for s in "${@}" ; do
    s=\"$s\"
    APP_ARGS=$APP_ARGS" "$s
done

# Collect all arguments for the java command, following the shell quoting and substitution rules
eval set -- "$DEFAULT_JVM_OPTS" "$JAVA_OPTS" "$AIRFLOW_OPTS" -classpath "\"$CLASSPATH\"" com.mesosphere.sdk.airflow.scheduler.Main "$APP_ARGS"

# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
  cd "$(dirname "$0")"
fi

exec "$JAVACMD" "$@"
