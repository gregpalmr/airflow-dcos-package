name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{SERVICE_PRINCIPAL}}
  user: {{SERVICE_USER}}
pods:
  postgresql:
    count: 1
    image: {{POSTGRES_DOCKER_IMAGE}}
    resource-sets:
      postgresql-resources:
        cpus: {{DB_CPUS}}
        memory: {{DB_MEM}}
        volume:
          path: "postgresql_data"
          type: {{DB_DISK_TYPE}}
          size: {{DB_DISK_SIZE}}
        ports:
          dbport:
             port: 0
             env-key: AIRFLOW_POSTGRESQL_PORT
             advertise: true
             vip:
               prefix: airflow-postgresql
               port: 5432
    tasks:
      server:
        goal: RUNNING
        resource-set: postgresql-resources
        cmd: "echo Postgres && docker-entrypoint.sh postgres"
        health-check:
          cmd: "echo 0"
          grace-period: 360
          interval: 60
          max-consecutive-failures: 5
          delay: 0
          timeout: 10
        env:
          "FRAMEWORK_NAME": "{{FRAMEWORK_NAME}}"
          "POSTGRES_DB": "airflow-db"
          "POSTGRES_PGDATA": "pgdata"
          "POSTGRES_USER": "{{DB_USER}}"
          "POSTGRES_PASSWORD": "{{DB_USER_PASSWORD}}"
  server:
    count: 1
    image: {{AIRFLOW_SCHEDULER_DOCKER_IMAGE}}
    volume:
      path: airflow-shared-volume
      type: {{SCHEDULER_DISK_TYPE}}
      size: {{SCHEDULER_DISK_SIZE}}
    resource-sets:
      server-resources:
        cpus: {{SCHEDULER_CPUS}}
        memory: {{SCHEDULER_MEM}}
        volume:
          path: "server_volume"
          type: {{SCHEDULER_DISK_TYPE}}
          size: {{SCHEDULER_DISK_SIZE}}
      webserver-resources:
        cpus: {{WEBSERVER_CPUS}}
        memory: {{WEBSERVER_MEM}}
        volume:
          path: "webserver_volume"
          type: {{WEBSERVER_DISK_TYPE}}
          size: {{WEBSERVER_DISK_SIZE}}
        ports:
            webserver-http-port:
                port: 0
                env-key: AIRFLOW_WEBSERVER_HTTP_PORT
                advertise: true
    tasks:
      initdb:
        goal: FINISHED
        cmd: "echo Init-DB && /usr/local/airflow/bin/initdb.sh"
        resource-set: server-resources
        env:
          "FRAMEWORK_NAME": "{{FRAMEWORK_NAME}}"
          "AIRFLOW_HOME": "/usr/local/airflow"
          "POSTGRES_USER": "{{DB_USER}}"
          "POSTGRES_PASSWORD": "{{DB_USER_PASSWORD}}"
          "USE_DOCKER_CONTAINER": "{{USE_DOCKER_CONTAINER}}"
          "DEFAULT_DOCKER_CONTAINER_IMAGE": "{{DEFAULT_DOCKER_CONTAINER_IMAGE}}"
      dag-scheduler:
        goal: RUNNING
        resource-set: server-resources
        cmd: "echo '### Scheduler ###' && mkdir -p $MESOS_SANDBOX/airflow-shared-volume/airflow-dags/ && echo '### Dir: airflow-dags ###' && find / | grep airflow-dags && /usr/local/airflow/bin/start-scheduler.sh"
        health-check:
          cmd: "airflow list_dags"
          grace-period: 360
          interval: 60
          max-consecutive-failures: 5
          delay: 0
          timeout: 10
        env:
          "FRAMEWORK_NAME": "{{FRAMEWORK_NAME}}"
          "AIRFLOW_HOME": "/usr/local/airflow"
          "DAGS_FOLDER": "$MESOS_SANDBOX/airflow-shared-volume/airflow-dags"
          "POSTGRES_USER": "{{DB_USER}}"
          "POSTGRES_PASSWORD": "{{DB_USER_PASSWORD}}"
          "PARALLELISM": {{PARALLELISM}}
          "DAG_CONCURRENCY": {{DAG_CONCURRENCY}}
          "MAX_ACTIVE_RUNS_PER_DAG": {{MAX_ACTIVE_RUNS_PER_DAG}}
          "USE_DOCKER_CONTAINER": {{USE_DOCKER_CONTAINER}}
          "DEFAULT_DOCKER_CONTAINER_IMAGE": {{DEFAULT_DOCKER_CONTAINER_IMAGE}}
      webserver:
        goal: RUNNING
        resource-set: webserver-resources
        cmd: "echo \"### Webserver ###\" && echo \"### FRAMEWORK_HOST: ${FRAMEWORK_HOST} ###\" && /usr/local/airflow/bin/start-webserver.sh"
        env:
          "FRAMEWORK_NAME": "{{FRAMEWORK_NAME}}"
          "AIRFLOW_HOME": "/usr/local/airflow"
          "DAGS_FOLDER": "$MESOS_SANDBOX/airflow-shared-volume/airflow-dags"
          "POSTGRES_USER": "{{DB_USER}}"
          "POSTGRES_PASSWORD": "{{DB_USER_PASSWORD}}"
        health-check:
          cmd: "curl server-0-webserver.${FRAMEWORK_HOST}:${AIRFLOW_WEBSERVER_HTTP_PORT}"
          grace-period: 360
          interval: 60
          max-consecutive-failures: 5
          delay: 0
          timeout: 10
plans:
  deploy:
    phases:
      postgresql-deploy:
        strategy: serial
        pod: postgresql
        steps:
          - default: [[server]]
      scheduler-deploy:
        strategy: serial
        pod: server 
        steps:
          - default: [[initdb], [dag-scheduler], [webserver]]
